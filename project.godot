; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Sprite",
"class": "Cell",
"language": "GDScript",
"path": "res://board/cell/cell.gd"
}, {
"base": "Node",
"class": "HerarchicalState",
"language": "GDScript",
"path": "res://util/herarchical_state.gd"
}, {
"base": "Node",
"class": "InputHandler",
"language": "GDScript",
"path": "res://input/input.gd"
}, {
"base": "Node",
"class": "MovementStateMachine",
"language": "GDScript",
"path": "res://character/player/movement_state_machine/movement_state_machine.gd"
}, {
"base": "KinematicBody2D",
"class": "Player",
"language": "GDScript",
"path": "res://character/player/player.gd"
}, {
"base": "Node",
"class": "PlayerIdle",
"language": "GDScript",
"path": "res://character/player/movement_states/idle.gd"
}, {
"base": "Node",
"class": "PlayerMoving",
"language": "GDScript",
"path": "res://character/player/movement_states/moving.gd"
}, {
"base": "Node",
"class": "PushDownAutomata",
"language": "GDScript",
"path": "res://util/push_down_automata.gd"
}, {
"base": "Node",
"class": "State",
"language": "GDScript",
"path": "res://util/state.gd"
}, {
"base": "Node",
"class": "StateMachine",
"language": "GDScript",
"path": "res://util/stateMachine.gd"
}, {
"base": "Node",
"class": "Tuple",
"language": "GDScript",
"path": "res://util/tuple.gd"
}, {
"base": "Node",
"class": "TwoDArray",
"language": "GDScript",
"path": "res://util/2_d_array.gd"
} ]
_global_script_class_icons={
"Cell": "",
"HerarchicalState": "",
"InputHandler": "",
"MovementStateMachine": "",
"Player": "",
"PlayerIdle": "",
"PlayerMoving": "",
"PushDownAutomata": "",
"State": "",
"StateMachine": "",
"Tuple": "",
"TwoDArray": ""
}

[application]

config/name="BaseDefense"
run/main_scene="res://Main.tscn"
config/icon="res://icon.png"

[autoload]

UtilFunctions="*res://util/utilFunctions.gd"
PlayerInput="*res://input/player_input/player_input.gd"

[rendering]

environment/default_environment="res://default_env.tres"
